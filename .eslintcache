[{"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\Admin.js":"1","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\ProfileSetting.js":"2","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\Pet.js":"3","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\MyPets.js":"4","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\index.js":"5","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalLogIn.js":"6","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalSignUp.js":"7","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\AddPet.js":"8","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Home.js":"9","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\App.js":"10","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\SearchPet.js":"11","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\PetCard.js":"12","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\User.js":"13"},{"size":1192,"mtime":1610178552836,"results":"14","hashOfConfig":"15"},{"size":4077,"mtime":1610178722023,"results":"16","hashOfConfig":"15"},{"size":1684,"mtime":1610178269530,"results":"17","hashOfConfig":"15"},{"size":2164,"mtime":1610031380751,"results":"18","hashOfConfig":"15"},{"size":500,"mtime":1606139078750,"results":"19","hashOfConfig":"15"},{"size":3272,"mtime":1610128477172,"results":"20","hashOfConfig":"15"},{"size":4961,"mtime":1609612002623,"results":"21","hashOfConfig":"15"},{"size":8437,"mtime":1610189016439,"results":"22","hashOfConfig":"15"},{"size":1416,"mtime":1609848866768,"results":"23","hashOfConfig":"15"},{"size":2618,"mtime":1610115157953,"results":"24","hashOfConfig":"15"},{"size":6621,"mtime":1610187705333,"results":"25","hashOfConfig":"15"},{"size":2058,"mtime":1610178852450,"results":"26","hashOfConfig":"15"},{"size":1243,"mtime":1610137341631,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7iwfox",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\Admin.js",["61"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\ProfileSetting.js",["62"],"import React, { useState } from 'react'\r\nimport { Button, Card, Container, Form ,Image} from \"react-bootstrap\";\r\n\r\n\r\nexport default function ProfileSetting() {\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [firsName, setFirsName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [bio, setBio] = useState(\"\");\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        // setEmail(email);\r\n        // setPassword(password);\r\n        const updateProfile = {\r\n            id: Math.random(),\r\n            email: email,\r\n            password: password,\r\n            firsName: firsName,\r\n            lastName: lastName,\r\n            passwordConfirm: passwordConfirm,\r\n            phoneNumber: phoneNumber,\r\n\r\n        };\r\n        console.log(updateProfile);\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        setFirsName(\"\");\r\n        setLastName(\"\");\r\n        setPhoneNumber(\"\");\r\n        setPasswordConfirm(\"\");\r\n        setBio(\"\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"container\">\r\n                <Card className=\" mx-auto mb-4 mt-4 px-3 py-3 w-50 bg-light text-dark\">\r\n                    <Form className=\"mb-4\" onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label className=\" mt-3\" >Email</Form.Label>\r\n                            <Form.Control type=\"email\" value={email} required\r\n                                onChange={(event) => setEmail(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label className=\" mt-3\" >Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={password} required\r\n                                onChange={(event) => setPassword(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"confirmPassword\">\r\n                            <Form.Label className=\" mt-3\" >Confirm Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={passwordConfirm} required\r\n                                onChange={(event) => setPasswordConfirm(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"firsName\">\r\n                            <Form.Label className=\" mt-3\" >Firs Name</Form.Label>\r\n                            <Form.Control type=\"email\" value={firsName} required\r\n                                onChange={(event) => setFirsName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"lastName\">\r\n                            <Form.Label className=\" mt-3\" >Last Name</Form.Label>\r\n                            <Form.Control type=\"email\" value={lastName} required\r\n                                onChange={(event) => setLastName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"phoneNumber\">\r\n                            <Form.Label className=\" mt-3\" >Phone Number</Form.Label>\r\n                            <Form.Control type=\"email\" value={phoneNumber} required\r\n                                onChange={(event) => setPhoneNumber(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"bio\">\r\n                            <Form.Label className=\" mt-3\" >bio</Form.Label>\r\n                            <Form.Control type=\"bio\" value={bio} required\r\n                                onChange={(event) => setBio(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Button onClick={handleSubmit} className=\"w-100 mt-3 button\" type=\"submit\" > Save changes </Button>\r\n                    </Form>\r\n                </Card>\r\n\r\n            </Container>\r\n\r\n        </>);\r\n}\r\n\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\Pet.js",["63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useState } from 'react'\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport dog from \"../img/dog.jpg\"\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport PetCard from './PetCard'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nexport default function Pet(props) {\r\n    // const [button, setButton] = useState(false)\r\n    const { name, adoptionStatus, height, weight, color, bio, dietaryRestrictions, breed, picture, _id } = props.pet\r\n    const [open, setOpen] = useState(false);\r\n    // let { id } = useParams();\r\n\r\n    return (\r\n\r\n        // <div className=\"container w-50 \">\r\n\r\n        <Card style={{ width: \"18rem\" }}>\r\n            <Card.Header>Featured</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title> name: {name}</Card.Title>\r\n                {/* <Card.Img variant=\"top\" id=\"petsPhoto\" src={`http://localhost:5000/${picture}`} alt={name} className=\"w-100 \" /> */}\r\n                <Card.Text> Adoption Status:{adoptionStatus} </Card.Text>\r\n                {/* <Card.Text> Height: {height} </Card.Text>\r\n                    <Card.Text>weight: {weight}</Card.Text>\r\n                    <Card.Text>color: {color}</Card.Text> \r\n                    <Card.Text>bio: {bio}</Card.Text>\r\n                    <Card.Text>dietaryRestrictions: {dietaryRestrictions}</Card.Text>\r\n                    <Card.Text>breed:{breed}</Card.Text> */}\r\n                <Link variant=\"primary\" to={`/petcard/${_id}`}>\r\n                    <Button className=\"button\">\r\n                        see more\r\n                    </Button>\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n\r\n        //  </div>\r\n    )\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\MyPets.js",["76","77","78","79","80","81","82","83","84","85"],"import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, CardDeck, Col, Row } from \"react-bootstrap\";\r\nimport dog from \"../img/dog.jpg\"\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport Pet from './Pet'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport default function MyPets() {\r\n    const [button, setButton] = useState(false)\r\n    const [petsList, setPetsList] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getPetsList = async () => {\r\n            const res = await axios.get('http://localhost:5000/api/pet')\r\n            setPetsList(res.data);\r\n            console.log(petsList);\r\n        }\r\n        getPetsList()\r\n    }, [])  \r\n\r\n\r\n    return (\r\n        // <div>\r\n           <div className=\"container\">\r\n            <Row>\r\n            {petsList.map((pet) => (\r\n                <Pet key={pet.id} pet={pet} />\r\n            )\r\n            )}\r\n            </Row>\r\n        </div>\r\n\r\n        /* <Button size=\"lg\" type=\"button\" className=\"button\" >All pets</Button>\r\n        <Button size=\"lg\" className=\"button\" type=\"button\" >Saved pets</Button>\r\n        <CardDeck className=\"mt-5\">\r\n            <Card style={{ width: \"18rem\" }}>\r\n                <Card.Img variant=\"top\" src={dog} className=\"w-100\" />\r\n                <Card.Body >\r\n                    <Card.Title>My pets</Card.Title>\r\n                    <Card.Text> name: {name} </Card.Text>\r\n                    <Card.Text> Adoption Status: </Card.Text>\r\n                    <Card.Text> name: </Card.Text>\r\n                    <Link className=\"link-blue\" to=\"/Pet\" >\r\n                        <Button  >\r\n                            See more\r\n                        </Button>\r\n                    </Link>\r\n                    {/* <Card.Text> Height </Card.Text>\r\n                    <Card.Text>weight</Card.Text>\r\n                    <Card.Text>color</Card.Text>\r\n                    <Card.Text>bio</Card.Text>\r\n                    <Card.Text>dietaryRestrictions</Card.Text>\r\n                    <Card.Text>breed</Card.Text> */\r\n\r\n        /* </Card.Body>\r\n                        </Card >\r\n                    </CardDeck > * /} */\r\n        // </div >\r\n    )\r\n}\r\n",["86","87"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\index.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalLogIn.js",["88"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalSignUp.js",["89"],"import React, { useState } from 'react'\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n// import { Last } from 'react-bootstrap/esm/PageItem';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\n// const axios = axios.create({\r\n//     baseURL: 'http://localhost:5000/api'\r\n// })\r\n\r\nexport default function ModalSignUp() {\r\n    // const [usersList, setUsersList] = useState([])\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [modalSignUp, setModalSignUp] = useState(false)\r\n    const history = useHistory();\r\n\r\n\r\n    const openModalSignUp = () =>\r\n        setModalSignUp(true);\r\n\r\n\r\n    const handleClose = () =>\r\n        setModalSignUp(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const response = await axios.post(\"http://localhost:5000/api/user/register\", {\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confirmPassword,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            phoneNumber: phoneNumber,\r\n        });\r\n        console.log(response);\r\n        setModalSignUp(false);\r\n        const logIn = await axios.post(\"http://localhost:5000/api/user/login\", {\r\n            email: email,\r\n            password: password\r\n        })\r\n        if (logIn.status === 200) {\r\n            localStorage.setItem('token', response.data);\r\n        }\r\n        console.log(logIn)\r\n        history.push('/')\r\n        const reload = window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"btn btn-secondary my-2 my-sm-0 mr-4\"\r\n                type=\"button\"\r\n                onClick={openModalSignUp}\r\n            >Sign Up\t</Button>\r\n\r\n            <Modal show={modalSignUp} onHide={handleClose}>\r\n                {/* < Modal.Dialog className=\"d-flex align-items-center justify-content-center\"> */}\r\n                <Modal.Header >\r\n                    <Modal.Title>Sign Up</Modal.Title>\r\n                    <Button variant=\"light\" onClick={handleClose} type=\"button\">x</Button>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" value={email} required\r\n                                onChange={(event) => setEmail(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={password} required\r\n                                onChange={(event) => setPassword(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"confirmPassword\">\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={confirmPassword} required\r\n                                onChange={(event) => setConfirmPassword(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"firsName\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control type=\"email\" value={firstName} required\r\n                                onChange={(event) => setFirstName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"lastName\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control type=\"email\" value={lastName} required\r\n                                onChange={(event) => setLastName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"phoneNumber\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control type=\"email\" value={phoneNumber} required\r\n                                onChange={(event) => setPhoneNumber(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Button onClick={handleSubmit} className=\"w-100\" type=\"submit\"\r\n                        >\r\n                            Log In </Button>\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <div className=\"log-in w-100 text-center mt-2\">\r\n                    Need an account?\r\n                    </div>\r\n                {/* <Link className=\"link-blue\" to=\"/Signup\">Sign Up</Link> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\AddPet.js",["90","91"],"import React, { useState } from 'react'\r\nimport { Col, Button, Form, Row, Image } from \"react-bootstrap\";\r\nimport logoblack from \"../img/logoblack.png\"\r\n\r\n\r\nexport default function AddPet() {\r\n    const [type, setType] = useState(\"Dog\");\r\n    const [name, setName] = useState(\"\");\r\n    const [adoptionStatus, setAdoptionStatus] = useState(\"\");\r\n    const [height, setHeight] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [color, setColor] = useState(\"\");\r\n    const [bio, setBio] = useState(\"\");\r\n    const [dietaryRestrictions, setDietaryRestrictions] = useState(\"\");\r\n    const [breed, setBreed] = useState(\"\");\r\n    const [picture, setPicture] = useState(null)\r\n    const [hypoallergenic, setHypoallergenic]= useState(false)\r\n\r\n    const handleFileUpload = (e) => {\r\n        const file = e.target.files[0]\r\n        setPicture(file)\r\n    }\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        let formData = new FormData();\r\n        formData.append(\"type\", type);\r\n        formData.append(\"name\", name);\r\n        formData.append(\"adoptionStatus\", adoptionStatus);\r\n        formData.append(\"height\", height);\r\n        formData.append(\"weight\", weight);\r\n        formData.append(\"color\", color);\r\n        formData.append(\"bio\", bio);\r\n        formData.append(\"dietaryRestrictions\", dietaryRestrictions);\r\n        formData.append(\"breed\", breed);\r\n        formData.append(\"hypoallergenic\", hypoallergenic)\r\n        // formData.append(\"picture\", picture);\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: formData\r\n        }\r\n\r\n        fetch(\"http://localhost:5000/api/pet\", requestOptions)\r\n            .then(res => {\r\n                console.log(formData);\r\n                console.log(res.status);\r\n            })\r\n\r\n        // history.push('/')\r\n        // const reload = window.location.reload()\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <Form onSubmit={handleSubmit} className=\" mx-auto mt-2 px-3 py-3 w-50 bg-light text-dark\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"Type\">\r\n                            <Form.Label className=\"mt-1\">Type</Form.Label>\r\n                            <Form.Control as=\"select\" defaultValue=\"Dog\"\r\n                                value={type}\r\n                                onChange={(event) => setType(event.target.value)}    >\r\n                                <option>Dog</option>\r\n                                <option>Cat</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label className=\"mt-2\">Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={name}\r\n                                required\r\n                                onChange={(event) => setName(event.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"adoptionStatus\">\r\n                            <Form.Label className=\"mt-2\">Adoption status</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={adoptionStatus}\r\n                                required\r\n                                onChange={(event) => setAdoptionStatus(event.target.value)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"dietaryRestrictions\">\r\n                            <Form.Label className=\"mt-2\">Dietary restrictions</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={dietaryRestrictions}\r\n                                onChange={(event) => setDietaryRestrictions(event.target.value)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"breed\">\r\n                            <Form.Label className=\"mt-2\">Breed</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={breed}\r\n                                onChange={(event) => setBreed(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    {/* <Col sm={4}>\r\n                        <Form.Group  >\r\n                            <Form.Label className=\"mt-3 \">Upload picture</Form.Label>\r\n                            <Form.File type='file' name='picture' onChange={handleFileUpload} required />\r\n                        </Form.Group>\r\n                    </Col> */}\r\n                    <Col sm={4} >\r\n\r\n                        <Image src={logoblack} width=\"60%\" className=\"logo-form\" />\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Form.Group >\r\n                            <Form.Label className=\"mt-2\" as=\"legend\" column sm={2} >\r\n                                Hypoallergenic</Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Check\r\n                                    className=\"mx-4\"\r\n                                    type=\"radio\"\r\n                                    label=\"Yes\"\r\n                                    name=\"Yes\"\r\n                                    value={true} \r\n                                    id=\"yesButton\"\r\n                                    checked={hypoallergenic === true}\r\n                                    onChange={(event) => setHypoallergenic(event.target.value)}/>\r\n                                <Form.Check\r\n                                    className=\"mx-4\"\r\n                                    type=\"radio\"\r\n                                    label=\"No\"\r\n                                    name=\"No\"\r\n                                    value={false} \r\n                                    id=\"noButton\"\r\n                                    checked={hypoallergenic === false}\r\n                                    onChange={(event) => setHypoallergenic(event.target.value)}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"height\">\r\n                            <Form.Label className=\"mt-2\">Height</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={height}\r\n                                onChange={(event) => setHeight(event.target.value)}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"weight\">\r\n                            <Form.Label className=\"mt-2\">Weight</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={weight}\r\n                                onChange={(event) => setWeight(event.target.value)}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"color\">\r\n                            <Form.Label className=\"mt-2\">Color</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={color}\r\n                                onChange={(event) => setColor(event.target.value)}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n\r\n                <Form.Group controlId=\"bio\">\r\n                    <Form.Label className=\"mt-2\">Bio</Form.Label>\r\n                    <Form.Control as=\"textarea\"\r\n                        rows={3}\r\n                        value={bio}\r\n                        onChange={(event) => setBio(event.target.value)} />\r\n                </Form.Group>\r\n                <Button className=\"mt-3 button\"  type=\"submit\"> Save </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Home.js",["92","93"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\App.js",["94"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\SearchPet.js",["95"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\PetCard.js",["96","97"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\pages\\User.js",["98","99","100","101"],"import React, { useState } from 'react'\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function User(user) {\r\n    // const [button, setButton] = useState(false)\r\n    const { email, name , phoneNumber } = user.user;\r\n  \r\n\r\n    return (\r\n\r\n        <div className=\"container w-50 \">\r\n            <Card >\r\n                <Card.Header></Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title> name:{name} </Card.Title>\r\n                    {/* <Card.Img variant=\"top\" id=\"petsPhoto\" src={`http://localhost:5000/${picture}`} alt={name} className=\"w-100 \" /> */}\r\n                    <Card.Text> email: {email }</Card.Text>\r\n                    <Card.Text> phone number: {phoneNumber} </Card.Text>\r\n                    {/* <Card.Text>bio: {bio}</Card.Text>\r\n                    <Card.Text>dietaryRestrictions: {dietaryRestrictions}</Card.Text>\r\n                    <Card.Text>breed:{breed}</Card.Text> */}\r\n                    {/* <Link variant=\"primary\" to=\"/MyPets\" >\r\n                        <Button  > see more </Button>\r\n                    </Link> */}\r\n                </Card.Body>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"102","severity":1,"message":"103","line":22,"column":8,"nodeType":"104","endLine":22,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":41,"nodeType":"108","messageId":"109","endLine":2,"endColumn":46},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":11},{"ruleId":"106","severity":1,"message":"111","line":4,"column":27,"nodeType":"108","messageId":"109","endLine":4,"endColumn":33},{"ruleId":"106","severity":1,"message":"112","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":15},{"ruleId":"106","severity":1,"message":"113","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":19},{"ruleId":"106","severity":1,"message":"114","line":11,"column":35,"nodeType":"108","messageId":"109","endLine":11,"endColumn":41},{"ruleId":"106","severity":1,"message":"115","line":11,"column":43,"nodeType":"108","messageId":"109","endLine":11,"endColumn":49},{"ruleId":"106","severity":1,"message":"116","line":11,"column":51,"nodeType":"108","messageId":"109","endLine":11,"endColumn":56},{"ruleId":"106","severity":1,"message":"117","line":11,"column":58,"nodeType":"108","messageId":"109","endLine":11,"endColumn":61},{"ruleId":"106","severity":1,"message":"118","line":11,"column":63,"nodeType":"108","messageId":"109","endLine":11,"endColumn":82},{"ruleId":"106","severity":1,"message":"119","line":11,"column":84,"nodeType":"108","messageId":"109","endLine":11,"endColumn":89},{"ruleId":"106","severity":1,"message":"120","line":11,"column":91,"nodeType":"108","messageId":"109","endLine":11,"endColumn":98},{"ruleId":"106","severity":1,"message":"121","line":12,"column":12,"nodeType":"108","messageId":"109","endLine":12,"endColumn":16},{"ruleId":"106","severity":1,"message":"122","line":12,"column":18,"nodeType":"108","messageId":"109","endLine":12,"endColumn":25},{"ruleId":"106","severity":1,"message":"123","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"124","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"106","severity":1,"message":"125","line":2,"column":24,"nodeType":"108","messageId":"109","endLine":2,"endColumn":32},{"ruleId":"106","severity":1,"message":"126","line":2,"column":34,"nodeType":"108","messageId":"109","endLine":2,"endColumn":37},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":11},{"ruleId":"106","severity":1,"message":"111","line":4,"column":27,"nodeType":"108","messageId":"109","endLine":4,"endColumn":33},{"ruleId":"106","severity":1,"message":"127","line":4,"column":35,"nodeType":"108","messageId":"109","endLine":4,"endColumn":39},{"ruleId":"106","severity":1,"message":"128","line":11,"column":12,"nodeType":"108","messageId":"109","endLine":11,"endColumn":18},{"ruleId":"106","severity":1,"message":"129","line":11,"column":20,"nodeType":"108","messageId":"109","endLine":11,"endColumn":29},{"ruleId":"102","severity":1,"message":"130","line":23,"column":8,"nodeType":"104","endLine":23,"endColumn":10,"suggestions":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"106","severity":1,"message":"136","line":39,"column":15,"nodeType":"108","messageId":"109","endLine":39,"endColumn":21},{"ruleId":"106","severity":1,"message":"136","line":53,"column":15,"nodeType":"108","messageId":"109","endLine":53,"endColumn":21},{"ruleId":"106","severity":1,"message":"120","line":16,"column":12,"nodeType":"108","messageId":"109","endLine":16,"endColumn":19},{"ruleId":"106","severity":1,"message":"137","line":19,"column":11,"nodeType":"108","messageId":"109","endLine":19,"endColumn":27},{"ruleId":"106","severity":1,"message":"126","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":13},{"ruleId":"106","severity":1,"message":"138","line":3,"column":15,"nodeType":"108","messageId":"109","endLine":3,"endColumn":18},{"ruleId":"106","severity":1,"message":"139","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"140","line":21,"column":15,"nodeType":"108","messageId":"109","endLine":21,"endColumn":24},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":11},{"ruleId":"102","severity":1,"message":"141","line":21,"column":8,"nodeType":"104","endLine":21,"endColumn":10,"suggestions":"142"},{"ruleId":"106","severity":1,"message":"139","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"124","line":2,"column":16,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"106","severity":1,"message":"111","line":3,"column":27,"nodeType":"108","messageId":"109","endLine":3,"endColumn":33},{"ruleId":"106","severity":1,"message":"127","line":3,"column":35,"nodeType":"108","messageId":"109","endLine":3,"endColumn":39},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'dog' is defined but never used.","'Router' is defined but never used.","'PetCard' is defined but never used.","'useParams' is defined but never used.","'height' is assigned a value but never used.","'weight' is assigned a value but never used.","'color' is assigned a value but never used.","'bio' is assigned a value but never used.","'dietaryRestrictions' is assigned a value but never used.","'breed' is assigned a value but never used.","'picture' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'CardDeck' is defined but never used.","'Col' is defined but never used.","'Link' is defined but never used.","'button' is assigned a value but never used.","'setButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'petsList'. Either include it or remove the dependency array.",["144"],"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'reload' is assigned a value but never used.","'handleFileUpload' is assigned a value but never used.","'Row' is defined but never used.","'useState' is defined but never used.","'newSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'petID'. Either include it or remove the dependency array.",["147"],{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [userList]",{"range":"154","text":"155"},"Update the dependencies array to be: [petsList]",{"range":"156","text":"157"},"Update the dependencies array to be: [petID]",{"range":"158","text":"159"},[546,548],"[userList]",[675,677],"[petsList]",[699,701],"[petID]"]