[{"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\index.js":"1","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalLogIn.js":"2","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalSignUp.js":"3","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\App.js":"4","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\reportWebVitals.js":"5","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\context\\UserContext.js":"6","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Home.js":"7","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\ProfileSetting.js":"8","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Admin.js":"9","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\SearchPet.js":"10","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Pet.js":"11","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\PetCard.js":"12","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\AddPet.js":"13","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\User.js":"14"},{"size":500,"mtime":1622739951822,"results":"15","hashOfConfig":"16"},{"size":2642,"mtime":1613231711294,"results":"17","hashOfConfig":"16"},{"size":4663,"mtime":1622907400721,"results":"18","hashOfConfig":"16"},{"size":3498,"mtime":1624223102458,"results":"19","hashOfConfig":"16"},{"size":362,"mtime":1606139078750,"results":"20","hashOfConfig":"16"},{"size":79,"mtime":1613158971075,"results":"21","hashOfConfig":"16"},{"size":975,"mtime":1613820776524,"results":"22","hashOfConfig":"16"},{"size":3742,"mtime":1613234233710,"results":"23","hashOfConfig":"16"},{"size":1267,"mtime":1613234188986,"results":"24","hashOfConfig":"16"},{"size":6816,"mtime":1622916972302,"results":"25","hashOfConfig":"16"},{"size":871,"mtime":1613231585956,"results":"26","hashOfConfig":"16"},{"size":1706,"mtime":1613232200395,"results":"27","hashOfConfig":"16"},{"size":9055,"mtime":1613290193245,"results":"28","hashOfConfig":"16"},{"size":602,"mtime":1613231654695,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"mg2361",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\index.js",[],["65","66"],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalLogIn.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\modals\\ModalSignUp.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\App.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\reportWebVitals.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\context\\UserContext.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Home.js",[],"C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\ProfileSetting.js",["67"],"import React, { useState, useContext } from 'react'\r\nimport { Button, Card, Container, Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n\r\nexport default function ProfileSetting() {\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [firsName, setFirsName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [bio, setBio] = useState(\"\");\r\n    const history = useHistory();\r\n    const { baseURL, currentUser } = useContext(UserContext);\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const res = await axios.put(`${baseURL}/api/user/${currentUser._id}`, {\r\n            email: email,\r\n            password: password,\r\n            firsName: firsName,\r\n            lastName: lastName,\r\n            phoneNumber: phoneNumber,\r\n\r\n        })\r\n        setPassword(\"\");\r\n        setEmail(\"\");\r\n        setFirsName(\"\");\r\n        setLastName(\"\");\r\n        setPhoneNumber(\"\");\r\n        setBio(\"\");\r\n        history.push('/')\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"container mt-5\">\r\n                <Card className=\" mx-auto mb-4 mt-4 px-3 py-3 w-50 bg-light text-dark\">\r\n                    <Form className=\"mb-4\" onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label className=\" mt-3\" >Email</Form.Label>\r\n                            <Form.Control type=\"email\" value={email} required\r\n                                onChange={(event) => setEmail(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label className=\" mt-3\" >Password</Form.Label>\r\n                            <Form.Control type=\"password\" value={password} required\r\n                                onChange={(event) => setPassword(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"firsName\">\r\n                            <Form.Label className=\" mt-3\" >Firs Name</Form.Label>\r\n                            <Form.Control type=\"email\" value={firsName} required\r\n                                onChange={(event) => setFirsName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"lastName\">\r\n                            <Form.Label className=\" mt-3\" >Last Name</Form.Label>\r\n                            <Form.Control type=\"email\" value={lastName} required\r\n                                onChange={(event) => setLastName(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"phoneNumber\">\r\n                            <Form.Label className=\" mt-3\" >Phone Number</Form.Label>\r\n                            <Form.Control type=\"email\" value={phoneNumber} required\r\n                                onChange={(event) => setPhoneNumber(event.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"bio\">\r\n                            <Form.Label className=\" mt-3\" >bio</Form.Label>\r\n                            <Form.Control type=\"bio\" value={bio} required\r\n                                onChange={(event) => setBio(event.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <Button onClick={handleSubmit} className=\"w-100 mt-3 button\" type=\"submit\" > Save changes </Button>\r\n                    </Form>\r\n                </Card>\r\n\r\n            </Container>\r\n\r\n        </>);\r\n}\r\n\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Admin.js",["68"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Tab, Tabs, Row } from \"react-bootstrap\";\r\nimport AddPet from './AddPet';\r\nimport User from './User';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n\r\n\r\n\r\nexport default function Admin() {\r\n    const [userList, setUserList] = useState([])\r\n    const { baseURL } = useContext(UserContext);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getUsersList = async () => {\r\n            const res = await axios.get(`${baseURL}/api/user`)\r\n            setUserList(res.data);\r\n        }\r\n        getUsersList()\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container mt-5\">\r\n            <Tabs defaultActiveKey=\"addPet\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"addPet\" className=\"tabs\" title=\"Add pet\">\r\n                    <AddPet />\r\n                </Tab>\r\n                <Tab eventKey=\"userList\" className=\"tabs\" title=\"User list\">\r\n                    <Row>\r\n                        {userList.map((user) => (\r\n                            <User key={user.id} user={user} />\r\n                        )\r\n                        )}\r\n                    </Row>\r\n                </Tab>\r\n\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\SearchPet.js",["69","70"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { InputGroup, Button, FormControl, Form, Card, Collapse, Row } from \"react-bootstrap\";\r\nimport dogandcat from \"../img/dogandcat.jpg\"\r\nimport axios from 'axios'\r\nimport Pet from \"./Pet\"\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\n\r\n\r\nexport default function SearchPet() {\r\n    const [searchType, setSearchType] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [searchAdoptionStatus, setSearchAdoptionStatus] = useState(\"\");\r\n    const [searchHeight, setSearchHeight] = useState(\"\");\r\n    const [searchWeight, setSearchWeight] = useState(\"\");\r\n    const [searchName, setSearchName] = useState(\"\");\r\n    const [petList, setPetList] = useState([])\r\n    const { baseURL } = useContext(UserContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const getPetsList = async () => {\r\n            const res = await axios.get(`${baseURL}/api/pet`)\r\n            setPetList(res.data);\r\n        }\r\n        getPetsList()\r\n    }, [])\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const newSearch = {\r\n            searchType: searchType,\r\n            searchAdoptionStatus: searchAdoptionStatus,\r\n            searchHeight: searchHeight,\r\n            searchWeight: searchWeight,\r\n            searchName: searchName,\r\n        };\r\n        const res = await axios.get(`${baseURL}/api/pet/search?type=${searchType}&&height=${searchHeight}&&weight=${searchWeight}&&name=${searchName}&&adoptionStatus=${searchAdoptionStatus}`)\r\n        if (res.data) {\r\n            \r\n            setPetList(res.data);\r\n            setSearchType(\"\");\r\n            setSearchAdoptionStatus(\"\");\r\n            setSearchHeight(\"\");\r\n            setSearchWeight(\"\");\r\n            setSearchName(\"\");\r\n        } else {\r\n            alert(\"No results\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container search mb-5 mt-5\">\r\n                <Card >\r\n                    <Card.Img src={dogandcat} alt=\"dog and a cat\" className=\"mx-auto\" size=\"lg\" block></Card.Img>\r\n                    <Card.ImgOverlay>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <InputGroup className=\"mb-2\">\r\n                                    <FormControl\r\n                                        placeholder=\"Cat/Dog\"\r\n                                        aria-label=\"Search\"\r\n                                        value={searchType}\r\n                                        onChange={(event) => setSearchType(event.target.value)} />\r\n                                    <InputGroup.Append>\r\n                                        <Button onClick={handleSubmit} variant=\"dark\">Search</Button>\r\n\r\n                                        <Button\r\n                                            className=\"button\"\r\n                                            onClick={() => setOpen(!open)}\r\n                                            aria-controls=\"savedPets\"\r\n                                            aria-expanded={open}\r\n                                        > Advanced search</Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n\r\n                            </InputGroup>\r\n                            <Collapse in={open}>\r\n                                <div className=\"collapseList\" id=\"savedPets\">\r\n                                    <Form.Group >\r\n                                        <Form.Label className=\"white-text\">Adoption status</Form.Label>\r\n                                        <Form.Control\r\n                                            aria-label=\"Adoption status\"\r\n                                            value={searchAdoptionStatus}\r\n                                            onChange={(event) => setSearchAdoptionStatus(event.target.value)}\r\n                                            type=\"text\" />\r\n                                        <Form.Text >\r\n                                        </Form.Text>\r\n\r\n                                        <Form.Label className=\"white-text\">Height</Form.Label>\r\n                                        <Form.Control\r\n                                            aria-label=\"Adoption status\"\r\n                                            value={searchHeight}\r\n                                            onChange={(event) => setSearchHeight(event.target.value)}\r\n                                            type=\"text\" />\r\n                                        <Form.Text >\r\n                                        </Form.Text>\r\n\r\n                                        <Form.Label className=\"white-text\">Weight</Form.Label>\r\n                                        <Form.Control\r\n                                            value={searchWeight}\r\n                                            onChange={(event) => setSearchWeight(event.target.value)}\r\n                                            type=\"text\" />\r\n                                        <Form.Text>\r\n                                        </Form.Text>\r\n\r\n                                        <Form.Label className=\"white-text\">Type</Form.Label>\r\n                                        <Form.Control\r\n                                            value={searchType}\r\n                                            onChange={(event) => setSearchType(event.target.value)}\r\n                                            type=\"text\" />\r\n                                        <Form.Text >\r\n                                        </Form.Text>\r\n\r\n                                        <Form.Label className=\"white-text\">Name</Form.Label>\r\n                                        <Form.Control\r\n                                            value={searchName}\r\n                                            onChange={(event) => setSearchName(event.target.value)}\r\n                                            type=\"text\" />\r\n                                        <Form.Text >\r\n                                        </Form.Text>\r\n                                    </Form.Group>\r\n                                    <Button onClick={handleSubmit} variant=\"dark\" className=\"mt-2\">Search</Button>\r\n                                </div>\r\n                            </Collapse>\r\n\r\n                        </Form>\r\n                    </Card.ImgOverlay>\r\n                </Card>\r\n                <div className=\"container mt-5 pt-3\">\r\n                    <Row>\r\n                        {petList.map((pet) => (\r\n                            <Pet key={pet.id} pet={pet} />\r\n                        )\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </>);\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\Pet.js",["71"],"import React from 'react'\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Pet(props) {\r\n    const { name, adoptionStatus, picture, _id } = props.pet\r\n\r\n    return (\r\n\r\n\r\n        <Card style={{ width: \"18rem\" }}>\r\n            <Card.Header></Card.Header>\r\n            <Card.Body>\r\n                <Card.Title> name: {name}</Card.Title>\r\n                <Card.Img variant=\"top\" id=\"petsPhoto\" src={picture} alt={name} className=\"w-100 \" />\r\n                <Card.Text> Adoption Status:{adoptionStatus} </Card.Text>\r\n                <Link variant=\"primary\" to={`/petcard/${_id}`}>\r\n                    <Button className=\"button\">\r\n                        see more\r\n                    </Button>\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n\r\n    )\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\PetCard.js",["72"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n\r\nexport default function PetCard(props) {\r\n    let { id } = useParams();\r\n    const petID = id;\r\n    const [pet, setPet] = useState({});\r\n    const { baseURL } = useContext(UserContext);\r\n\r\n\r\n    useEffect(() => {\r\n        const getPetById = async () => {\r\n            const res = await axios.get(`${baseURL}/api/pet/${petID}`)\r\n            setPet(res.data);\r\n        }\r\n        getPetById()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div className=\"container w-50 \">\r\n            <Card >\r\n                <Card.Header></Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title> name: {pet.name}</Card.Title>\r\n                    <Card.Img variant=\"top\" id=\"petsPhoto\" src={pet.picture} alt={pet.name} className=\"w-100 \" />\r\n                    <Card.Text> Adoption Status:{pet.adoptionStatus} </Card.Text>\r\n                    <Card.Text> Height: {pet.height} </Card.Text>\r\n                    <Card.Text>weight: {pet.weight}</Card.Text>\r\n                    <Card.Text>color: {pet.color}</Card.Text>\r\n                    <Card.Text>bio: {pet.bio}</Card.Text>\r\n                    <Card.Text>dietaryRestrictions: {pet.dietaryRestrictions}</Card.Text>\r\n                    <Card.Text>breed:{pet.breed}</Card.Text>\r\n                    <Link to=\"/searchpet\" >\r\n                        <Button className=\"button\"  > Back </Button>\r\n                    </Link>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\AddPet.js",["73"],"import logoblack from \"../img/logoblack.png\"\r\nimport axios from 'axios'\r\nimport React, { useState, useContext } from 'react';\r\nimport { Form, Button, Card, Col, Row, Image } from 'react-bootstrap';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n\r\nexport default function AddPet() {\r\n    const { baseURL } = useContext(UserContext);\r\n    const [formData, setFormData] = useState({\r\n        type: 'Dog',\r\n        name: '',\r\n        adoptionStatus: 'Available',\r\n        height: 0,\r\n        weight: 0,\r\n        color: '',\r\n        bio: '',\r\n        dietaryRestrictions: '',\r\n        breed: '',\r\n        hypoallergenic: false,\r\n    });\r\n    const [picture, setPicture] = useState('');\r\n    const [previewPetImage, setPreviewPetImage] = useState('');\r\n    const [petImage, setPetImage] = useState();\r\n\r\n\r\n    const onChange = (e) =>\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    \r\n    const handleFileUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFile(file);\r\n        setPetImage(file);\r\n    };\r\n    const previewFile = async (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewPetImage(reader.result);\r\n        };\r\n    };\r\n    const onSubmitForm = async (e) => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(petImage);\r\n            let newPet = {\r\n                type,\r\n                name,\r\n                adoptionStatus,\r\n                height,\r\n                weight,\r\n                color,\r\n                bio,\r\n                dietaryRestrictions,\r\n                breed,\r\n                hypoallergenic,\r\n                image: reader.result,\r\n            };\r\n            try {\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                };\r\n                const body = JSON.stringify(newPet);\r\n                await axios.post(`${baseURL}/api/pet`, body, config);\r\n\r\n                setFormData({\r\n                    type: 'Dog',\r\n                    name: '',\r\n                    adoptionStatus: 'Available',\r\n                    height: 0,\r\n                    weight: 0,\r\n                    color: '',\r\n                    bio: '',\r\n                    dietaryRestrictions: '',\r\n                    breed: '',\r\n                    hypoallergenic: false,\r\n                });\r\n                setPicture('');\r\n                setPreviewPetImage('');\r\n            } catch (err) {\r\n                console.error(err.response);\r\n            }\r\n    };\r\n    const {\r\n        type,\r\n        name,\r\n        adoptionStatus,\r\n        height,\r\n        weight,\r\n        color,\r\n        bio,\r\n        dietaryRestrictions,\r\n        breed,\r\n        hypoallergenic,\r\n    } = formData;\r\n\r\n\r\n    return (\r\n        <div className=\"container \">\r\n            <Form onSubmit={onSubmitForm} className=\" mx-auto mt-2 px-3 py-3 w-50 bg-light text-dark\">\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"Type\">\r\n                            <Form.Label className=\"mt-1\">Type</Form.Label>\r\n                            <Form.Control as=\"select\" defaultValue=\"Dog\"\r\n                                value={type}\r\n                                name='type'\r\n                                onChange={(e) => onChange(e)} >\r\n                                <option>Dog</option>\r\n                                <option>Cat</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label className=\"mt-2\">Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={name}\r\n                                required\r\n                                name='name'\r\n                                onChange={(e) => onChange(e)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"adoptionStatus\">\r\n                            <Form.Label className=\"mt-2\">Adoption status</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={adoptionStatus}\r\n                                required\r\n                                onChange={(e) => onChange(e)}\r\n                                name='adoptionStatus' />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"dietaryRestrictions\">\r\n                            <Form.Label className=\"mt-2\">Dietary restrictions</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={dietaryRestrictions}\r\n                                name='dietaryRestrictions'\r\n                                onChange={(e) => onChange(e)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"breed\">\r\n                            <Form.Label className=\"mt-2\">Breed</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={breed}\r\n                                onChange={(e) => onChange(e)}\r\n                                name='breed' />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <Form.Group>\r\n                            <Form.File id=\"picture\" className=\"add-img\" value={picture} onChange={handleFileUpload} />\r\n                        </Form.Group>\r\n                        <Col>\r\n                            {previewPetImage && <img\r\n                                src={previewPetImage}\r\n                                alt='pet'\r\n                                style={{ height: '150px' }}\r\n                            />}\r\n                        </Col>\r\n                    </Col>\r\n                    <Col sm={4} >\r\n                        <Image src={logoblack} width=\"60%\" className=\"logo-form\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label className=\"hypo-input\"\r\n                            >Hypoallergenic :</Form.Label>\r\n                            <Form.Control\r\n                                as='select'\r\n                                name='hypoallergenic'\r\n                                value={hypoallergenic}\r\n                                onChange={(e) => onChange(e)}   >\r\n                                <option value={true}>Yes</option>\r\n                                <option value={false}>No</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group controlId=\"height\">\r\n                            <Form.Label className=\"mt-2\">Height</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={height}\r\n                                name='height'\r\n                                onChange={(e) => onChange(e)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"weight\">\r\n                            <Form.Label className=\"mt-2\">Weight</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={weight}\r\n                                name='weight'\r\n                                onChange={(e) => onChange(e)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId=\"color\">\r\n                            <Form.Label className=\"mt-2\">Color</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                value={color}\r\n                                name='color'\r\n                                onChange={(e) => onChange(e)} />\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Form.Group controlId=\"bio\">\r\n                    <Form.Label className=\"mt-2\">Bio</Form.Label>\r\n                    <Form.Control as=\"textarea\"\r\n                        rows={3}\r\n                        value={bio}\r\n                        name='bio'\r\n                        onChange={(e) => onChange(e)} />\r\n                </Form.Group>\r\n                <Button className=\"mt-3 button\" type=\"submit\"> Save </Button>\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n};\r\n","C:\\Users\\naor\\pet-adoption-front-end-naor789\\src\\components\\User.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":21,"column":15,"nodeType":"80","messageId":"81","endLine":21,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":23,"column":8,"nodeType":"84","endLine":23,"endColumn":10,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"83","line":27,"column":8,"nodeType":"84","endLine":27,"endColumn":10,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"87","line":31,"column":15,"nodeType":"80","messageId":"81","endLine":31,"endColumn":24},{"ruleId":"78","severity":1,"message":"88","line":3,"column":27,"nodeType":"80","messageId":"81","endLine":3,"endColumn":33},{"ruleId":"82","severity":1,"message":"89","line":21,"column":8,"nodeType":"84","endLine":21,"endColumn":10,"suggestions":"90"},{"ruleId":"78","severity":1,"message":"91","line":4,"column":24,"nodeType":"80","messageId":"81","endLine":4,"endColumn":28},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'baseURL'. Either include it or remove the dependency array.","ArrayExpression",["94"],["95"],"'newSearch' is assigned a value but never used.","'Router' is defined but never used.","React Hook useEffect has missing dependencies: 'baseURL' and 'petID'. Either include them or remove the dependency array.",["96"],"'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [baseURL]",{"range":"102","text":"103"},{"range":"104","text":"103"},"Update the dependencies array to be: [baseURL, petID]",{"range":"105","text":"106"},[616,618],"[baseURL]",[1013,1015],[651,653],"[baseURL, petID]"]